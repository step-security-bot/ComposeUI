{"version":3,"file":"component---src-pages-documentation-index-js-c2f1bf45fa23c3d4b3b3.js","mappings":"uIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,aAAa,KAACC,GAAQR,EAErD,OADKQ,GAqBP,SAA8BC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAvBaG,CAAqB,QAAQ,GACjCC,EAAAA,cAAoBL,EAAM,CAC/BM,MAAO,aACND,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,qRAAsRU,EAAAA,cAAoBb,EAAYI,IAAK,CACrWW,IAAK,kDACLC,IAAK,qBACH,KAAMH,EAAAA,cAAoBb,EAAYK,EAAG,CAC3CY,KAAM,2FACLJ,EAAAA,cAAoBb,EAAYI,IAAK,CACtCW,IAAK,oGACLC,IAAK,QACFH,EAAAA,cAAoB,IAAK,CAC5BK,QAAS,WACTD,KAAM,8CACLJ,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,iBAC9C,CAKA,IAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAASC,GAAanB,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOa,EAAYP,EAAAA,cAAoBO,EAAWrB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,C,oFCcA,UAlC2BsB,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EAC5C,MAAMG,EAAOF,EAAKG,OAAOC,MAEzB,OACEb,EAAAA,cAACc,EAAAA,EAAM,CAACL,KAAMA,EAAMC,SAAUA,GAC5BV,EAAAA,cAAA,OAAKe,UAAU,kBACbf,EAAAA,cAACgB,EAAAA,EAAW,MACXL,EAAKM,KAAKC,IACT,MAAMjB,EAAQiB,EAAKC,YAAYlB,MACzBmB,EAAMF,EAAKG,gBAAgBC,MACjC,OACEtB,EAAAA,cAAA,WAASe,UAAU,UAAUQ,IAAKL,EAAKM,OAAOC,MAC5CzB,EAAAA,cAAA,UACEA,EAAAA,cAAC0B,EAAAA,KAAI,CAACC,GAAIT,EAAKM,OAAOC,MAAOxB,IAE/BD,EAAAA,cAAA,UACGoB,GACCA,EAAIH,KAAI,CAACW,EAAMC,IACb7B,EAAAA,cAAA,MAAIuB,IAAKM,GACP7B,EAAAA,cAAC0B,EAAAA,KAAI,CAACC,GAAE,GAAKT,EAAKM,OAAOC,KAAOG,EAAKE,KAClCF,EAAK3B,WAKR,IAGdD,EAAAA,cAAC+B,EAAAA,EAAG,CAAC9B,MAAM,mBAEN,C","sources":["webpack://ms-gh-pages/./content/hero.mdx","webpack://ms-gh-pages/./src/pages/documentation/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Hero} = _components;\n  if (!Hero) _missingMdxReference(\"Hero\", true);\n  return React.createElement(Hero, {\n    title: \"ComposeUI\"\n  }, React.createElement(_components.p, null, \"ComposeUI is a .NET based general UI Container and Unified UI and App host which\\nenables the hosting of Web and desktop content. It supports desktop and web applications\\nin order to provide an evergreen alternative to Electron, OpenFin and similar by the use of WebView2.\"), React.createElement(_components.img, {\n    src: \"https://badgen.net/badge/Lifecycle/Active/green\",\n    alt: \"Lifecycle Active\"\n  }), \"\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/morganstanley/ComposeUI/actions/workflows/continuous-integration.yml\"\n  }, React.createElement(_components.img, {\n    src: \"https://github.com/morganstanley/ComposeUI/actions/workflows/continuous-integration.yml/badge.svg\",\n    alt: \"CI\"\n  })), React.createElement(\"a\", {\n    variant: \"outlined\",\n    href: \"https://github.com/morganstanley/ComposeUI\"\n  }, React.createElement(_components.p, null, \"Project Repo\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\n\nimport HeroContent from '../../../content/hero.mdx';\n\nconst DocumentationIndex = ({ data, location }) => {\n  const docs = data.allMdx.nodes;\n\n  return (\n    <Layout data={data} location={location}>\n      <div className=\"main docs-main\">\n        <HeroContent />\n        {docs.map((node) => {\n          const title = node.frontmatter.title;\n          const toc = node.tableOfContents.items;\n          return (\n            <article className=\"content\" key={node.fields.slug}>\n              <h3>\n                <Link to={node.fields.slug}>{title}</Link>\n              </h3>\n              <ul>\n                {toc &&\n                  toc.map((item, i) => (\n                    <li key={i}>\n                      <Link to={`${node.fields.slug}${item.url}`}>\n                        {item.title}\n                      </Link>\n                    </li>\n                  ))}\n              </ul>\n            </article>\n          );\n        })}\n        <Seo title=\"Documentation\" />\n      </div>\n    </Layout>\n  );\n};\n\nexport default DocumentationIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        documentationUrl\n      }\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"/documentation//\" } } }\n      sort: [{ frontmatter: { order: ASC } }]\n    ) {\n      nodes {\n        id\n        tableOfContents\n        frontmatter {\n          title\n        }\n        internal {\n          contentFilePath\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","img","a","_provideComponents","components","Hero","id","component","Error","_missingMdxReference","React","title","src","alt","href","variant","wrapper","MDXLayout","_ref","data","location","docs","allMdx","nodes","Layout","className","HeroContent","map","node","frontmatter","toc","tableOfContents","items","key","fields","slug","Link","to","item","i","url","Seo"],"sourceRoot":""}